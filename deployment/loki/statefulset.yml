---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  labels:
    app.kubernetes.io/name: loki
spec:
  revisionHistoryLimit: 1
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  serviceName: loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: loki
          image: docker.io/grafana/loki:latest
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
          volumeMounts:
            - name: config
              mountPath: "/etc/loki"
            - name: storage
              mountPath: "/data:z"
              subPath: data
            - name: storage
              mountPath: "/wal:z"
              subPath: wal
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsGroup: 10001
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: loki
            defaultMode: 0755
        - name: storage
          emptyDir:
            sizeLimit: "2Gi"
