---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
  annotations:
    prometheus.io/port: http
    prometheus.io/scrape: "true"
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsGroup: 65534
        runAsUser: 65534
      initContainers:
        - name: curl
          image: docker.io/curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -c
            - >-
              for d in 20371 19062; do 
                curl https://grafana.com/api/dashboards/$d/revisions/lastest/download -L -O /var/lib/grafana/dashboards/$d.json ;
              done
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
              subPath: grafana
            - name: grafana-storage
              mountPath: /var/lib/grafana/dashboards
              subPath: dashboards
      containers:
      - name: grafana
        image: docker.io/grafana/grafana:10.3.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: "512Mi"
          limits:
            cpu: 200m
            memory: "1Gi"
        volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana
            subPath: grafana
          - name: grafana-storage
            mountPath: /var/lib/grafana/dashboards
            subPath: dashboards
          - name: dashbords
            mountPath: /etc/grafana/provisioning/dashboards/dashboards.yml
            subPath: dashboards.yml
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources/mimir.yaml
            subPath: mimir.yaml
            readOnly: false
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources/prometheus.yaml
            subPath: prometheus.yaml
            readOnly: false
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources/loki.yaml
            subPath: loki.yaml
            readOnly: false
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources/tempo.yaml
            subPath: tempo.yaml
            readOnly: false
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
              - ALL
      volumes:
        - name: dashboards
          configMap:
            name: dashboards
        - name: datasources
          configMap:
            name: datasources
        - name: grafana-storage
          emptyDir:
            sizeLimit: "1Gi"
